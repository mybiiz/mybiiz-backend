basePath: /
definitions:
  main.Bank:
    properties:
      code:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  main.Building:
    properties:
      address:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      lat:
        type: string
      lon:
        type: string
      name:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
    type: object
  main.Business:
    properties:
      address:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      serviceType:
        $ref: '#/definitions/main.ServiceType'
        type: object
      serviceTypeId:
        type: integer
      updatedAt:
        type: string
    type: object
  main.Partner:
    properties:
      address:
        type: string
      bank:
        $ref: '#/definitions/main.Bank'
        type: object
      bankAccountId:
        type: string
      bankHolderName:
        type: string
      bankId:
        type: integer
      bankName:
        type: string
      business:
        $ref: '#/definitions/main.Business'
        type: object
      businessId:
        type: integer
      city:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      familyIdNumber:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      lat:
        description: |-
          ServiceType    ServiceType `json:"serviceType"`
          ServiceTypeID  uint        `json:"serviceTypeId"`
        type: number
      lon:
        type: number
      name:
        type: string
      phone:
        type: string
      position:
        type: string
      sex:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/main.User'
        type: object
      userId:
        type: integer
    type: object
  main.ServiceType:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  main.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      partners:
        items:
          $ref: '#/definitions/main.Partner'
        type: array
      password:
        type: string
      registrationCompleted:
        type: boolean
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is the api doc for MyBiiz Backend.
  license: {}
  title: MyBiiz Backend
  version: "1.0"
paths:
  /buildings:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/main.Building'
              type: array
            type: array
      summary: All Buildings
    post:
      parameters:
      - description: Building
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/main.Building'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Building'
      summary: Post Building
  /buildings/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Building'
      summary: Delete Building
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Building'
      summary: Get Building
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/main.User'
              type: array
            type: array
      summary: All Users
  /users/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
      summary: Delete User
    get:
      parameters:
      - description: Some ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
      summary: Get User
    post:
      parameters:
      - description: User
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
      summary: Post User
swagger: "2.0"
